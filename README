Pre-requisites:
		Powershell version 5.0 or above should be available.
		Powershell script execution permission should be there.
		TaskSechdular service should be running and user should have access to schedule script. 

Configuration:
 
		- Do not delete any existing files from this package (you may delete log folder)
		- The KPI and its value will be produced as output.
		- Below details should be provided in conf/Config.ps1.
			e.g $HOST_NAME = "10.226.211.160"  (collection service IP)   
			e.g $PORT_ = 9101     (collection service IP)
			e.g $ENTERPRISE = "HDFC" 
			e.g $COMPONENT = "CRMNEXT_MOUNTPOINT"
			e.g $COMPONENT_INST = "CRMNEXT_MOUNTPOINT_146"
			e.g $AGENT_ID = "cc227e53-69c1-4191-88ae-452b034d2a64" 
			e.g $BASE_PATH="F:\APPNOMIC\Windows_MountPoint_Monitoring"  (This path refers to location where you would place this script)
		- Execute "Windows_MountPoint_Monitoring" batch file which will generate final.txt file.
		- Refer final.txt file to configure all kpis in AppsOne UI.
		- Run bat file manually to check if it sending data to AppsOne and verify the same from UI.
		- Finally, set this batch in TaskSechdular with required time interval to send continuous data to AppsOne & verify again.
    
   
Usage:
    The script runs like below:
		.\Windows_MountPoint_Monitoring.ps1 -h [Display help message]
		.\Windows_MountPoint_Monitoring.ps1 -v [Display version]
		.\Windows_MountPoint_Monitoring.ps1 
